Index: src/Platformer/Runner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\nimport javax.swing.JFrame;\r\nimport java.util.ArrayList;\r\n\r\npublic class Runner {\r\n    public static void main(String[] args) throws InterruptedException {\r\n        //Creates Window\r\n        JFrame frame = new JFrame(\"Platformer\");\r\n        //Creates list of entities to be placed into room\r\n        ArrayList<Entity> entities = new ArrayList<>();\r\n        //Adds new entities to list (Floor and boundaries are automatically added to room\r\n        entities.add(new Background(4021, 766, \"src/Platformer/Images/backGround_1.png\"));\r\n        entities.add(new Platform(300, 400, 150, 100));\r\n        entities.add(new Assassin(200, 200, 150, 200, 1));\r\n        entities.add(new Bot(800,200,100,299));\r\n        //Creates new room, sets width of room and heigth of floor. Also passes list of entities into the room\r\n        Room testingRoom = new Room(entities, 4021, 766);\r\n        //Puts the room onto the screen\r\n        frame.add(testingRoom);\r\n        //Sets attributes to the window (Size, visibility, close operation, resizability)\r\n        frame.setSize(1600, 900);\r\n        frame.setVisible(true);\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.setResizable(false);\r\n        //Core game loop; Steps game and refreshes the look. Then waits 16 ms to achieve 60 fps.\r\n        while (true) {\r\n            testingRoom.step();\r\n            testingRoom.repaint();\r\n            Thread.sleep(16);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Runner.java	(revision 58594db6d4e178f7f6c332532e1343a0816cdd19)
+++ src/Platformer/Runner.java	(date 1588648703074)
@@ -12,8 +12,9 @@
         //Adds new entities to list (Floor and boundaries are automatically added to room
         entities.add(new Background(4021, 766, "src/Platformer/Images/backGround_1.png"));
         entities.add(new Platform(300, 400, 150, 100));
-        entities.add(new Assassin(200, 200, 150, 200, 1));
         entities.add(new Bot(800,200,100,299));
+        entities.add(new Bot(1200,200,100,200));
+        entities.add(new Assassin(200, 200, 150, 200, 1));
         //Creates new room, sets width of room and heigth of floor. Also passes list of entities into the room
         Room testingRoom = new Room(entities, 4021, 766);
         //Puts the room onto the screen
Index: src/Platformer/Enemy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\nimport sun.font.TrueTypeFont;\r\n\r\nimport java.awt.*;\r\nimport java.awt.event.KeyEvent;\r\nimport java.util.Random;\r\n\r\npublic abstract class Enemy implements Entity { //Enemy-- does not have mana\r\n    protected int x, y, w, h, walkSpeed, healthPoints, maxHealth;\r\n    protected double grv, vSpd, hSpd, jumpHeight, hAcc;\r\n    protected boolean leftState, rightState, upState, canJump;\r\n    public Room room;\r\n    protected int[] imgIndex;\r\n\r\n    public Enemy(int x, int y, int w, int h) {\r\n        walkSpeed = 13;\r\n        healthPoints = 100;\r\n        hSpd = 0;\r\n        vSpd = 0;\r\n        jumpHeight = 0;\r\n        maxHealth = 100;\r\n        grv = 1.5;\r\n        hAcc = 2;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n        boolean leftState = false;\r\n        boolean rightState = false;\r\n        boolean canJump = false;\r\n        boolean upState = false;\r\n        boolean facingRight = false;\r\n    }\r\n\r\n    public void setRoom(Room room) {\r\n        this.room = room;\r\n    }\r\n\r\n    abstract void remove();\r\n\r\n    abstract void spawn();\r\n\r\n    void setHealth(int damage) {\r\n\r\n    }\r\n\r\n    public void step() {\r\n        upState = false;\r\n        int vrand = (int) (Math.random() * 250);// 0-2\r\n        int hrand = (int) (Math.random() * 500);//0-999\r\n\r\n        //horizontal decisions\r\n        if (leftState) {\r\n            if (hrand == 0) {\r\n                leftState = false;\r\n                rightState = false;\r\n            } else if (hrand == 1) {\r\n                leftState = false;\r\n                rightState = true;\r\n            }\r\n        } else if (rightState) {\r\n\r\n            if (hrand == 0) {\r\n                rightState = false;\r\n            } else if (hrand == 1) {\r\n                leftState = true;\r\n                rightState = false;\r\n            }\r\n        } else {\r\n            if (hrand == 0) {\r\n                leftState = true;\r\n                rightState = false;\r\n            } else if (hrand == 1) {\r\n                rightState = true;\r\n            }\r\n        }\r\n        //vertical decisions\r\n        if (vrand == 0) {\r\n            upState = true;\r\n        }\r\n        direction(leftState, rightState);\r\n        vSpd += grv;\r\n        canJump = false;\r\n        for (Entity i : room.entityList) {\r\n            if (i instanceof Platform) {\r\n                //Checks if Platform is directly below. If so, player can jump. Stays true once it becomes\r\n                if (!canJump) {\r\n                    canJump = i.getBounds().intersects(new Rectangle(x, y + 1, w, h));\r\n                }\r\n                if (canJump && upState) {\r\n                    vSpd = jumpHeight * -1; //Sends player upward (Jump)\r\n                    upState = false;\r\n\r\n                }\r\n                /* Checks if player will collide with a platform in the next step. If so, it\r\n                 * will move the player as close to the platform as possible without intersecting it.\r\n                 * Then, it sets vSpd/hSpd to 0, so it will not move in the direction. */\r\n                if (i.getBounds().intersects(new Rectangle(x + (int) hSpd, y, w, h))) {\r\n                    while (!i.getBounds().intersects(new Rectangle(x + (int) sign(hSpd), y, w, h))) {\r\n                        x += sign((int) hSpd);\r\n                    }\r\n                    hSpd = 0;\r\n                }\r\n                if (i.getBounds().intersects(new Rectangle(x, y + (int) vSpd, w, h))) {\r\n                    while (!i.getBounds().intersects(new Rectangle(x, y + (int) sign(vSpd), w, h))) {\r\n                        y += sign((int) vSpd);\r\n                    }\r\n                    vSpd = 0;\r\n                }\r\n                //Tests if player is inside a platform, and pushes player horizontally out of the shortest side\r\n                if (i.getBounds().intersects(new Rectangle(x, y, w, h))) {\r\n                    int distRight = Math.abs((int) (i.getBounds().getX() - (x + w)));\r\n                    int distLeft = Math.abs((int) (x - (i.getBounds().getX() + i.getBounds().getWidth())));\r\n                    if (distRight < distLeft) {\r\n                        x = (int) (i.getBounds().getX() - w);\r\n                    } else\r\n                        x = (int) (i.getBounds().getX() + i.getBounds().getWidth());\r\n                }\r\n            }\r\n        }\r\n        this.x += hSpd;\r\n        this.y += vSpd;\r\n    }\r\n\r\n    private double sign(double num) {\r\n        if (num != 0)\r\n            return (num / Math.abs(num));\r\n        return (0);\r\n    }\r\n\r\n    public double direction(boolean leftState, boolean rightState) {\r\n        int dir = 0;\r\n        if (leftState) {\r\n            dir += -1;\r\n        } else if (rightState) {\r\n            dir += 1;\r\n        }\r\n        return sideMovement(dir);\r\n    }\r\n\r\n    public double sideMovement(int dir) {\r\n        if (Math.abs(hSpd) < walkSpeed) {\r\n            hSpd += hAcc * dir;\r\n        }\r\n        return hSpd;\r\n    }\r\n\r\n    public void paint(Graphics2D g) {\r\n        g.setColor(new Color(74, 204, 111, 100));\r\n        if (canJump)\r\n            g.setColor(new Color(74, 204, 111));\r\n        g.fillRect(x - room.getCamX(), y, w, h);\r\n    }\r\n\r\n    //Returns the enemy's hit box\r\n    public Rectangle getBounds() {\r\n        return new Rectangle(x, y, w, h);\r\n    }\r\n\r\n    //Returns X position\r\n    public int getX() {\r\n        return x;\r\n    }\r\n\r\n    //Returns Y Position\r\n    public int getY() {\r\n        return y;\r\n    }\r\n\r\n    //Returns All Image Sources in Order\r\n    public String[] getImgSources() {\r\n        return new String[]{\"src/Platformer/Images/stockImage.png\"};\r\n    }\r\n\r\n    //Sets the list of indexes to display images\r\n    public void setImgIndex(int[] nums) {\r\n        imgIndex = nums;\r\n    }\r\n\r\n    //Contains logic for which image is to be displayed at a point in time\r\n    public int getImgIndex() {\r\n        return (imgIndex[0]);\r\n    }\r\n\r\n    //Returns whether or not a player can jump\r\n    public boolean canJump() {\r\n        return false;\r\n    }\r\n    int getHealth(){\r\n        return this.healthPoints;\r\n    }\r\n    int getTotalHealth(){\r\n        return this.maxHealth;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Enemy.java	(revision 58594db6d4e178f7f6c332532e1343a0816cdd19)
+++ src/Platformer/Enemy.java	(date 1588650082387)
@@ -12,6 +12,7 @@
     protected boolean leftState, rightState, upState, canJump;
     public Room room;
     protected int[] imgIndex;
+    protected HealthBars HB;
 
     public Enemy(int x, int y, int w, int h) {
         walkSpeed = 13;
@@ -33,119 +34,23 @@
         boolean facingRight = false;
     }
 
-    public void setRoom(Room room) {
-        this.room = room;
-    }
-
     abstract void remove();
 
     abstract void spawn();
 
-    void setHealth(int damage) {
-
-    }
 
     public void step() {
-        upState = false;
-        int vrand = (int) (Math.random() * 250);// 0-2
-        int hrand = (int) (Math.random() * 500);//0-999
-
-        //horizontal decisions
-        if (leftState) {
-            if (hrand == 0) {
-                leftState = false;
-                rightState = false;
-            } else if (hrand == 1) {
-                leftState = false;
-                rightState = true;
-            }
-        } else if (rightState) {
-
-            if (hrand == 0) {
-                rightState = false;
-            } else if (hrand == 1) {
-                leftState = true;
-                rightState = false;
-            }
-        } else {
-            if (hrand == 0) {
-                leftState = true;
-                rightState = false;
-            } else if (hrand == 1) {
-                rightState = true;
-            }
-        }
-        //vertical decisions
-        if (vrand == 0) {
-            upState = true;
-        }
-        direction(leftState, rightState);
-        vSpd += grv;
-        canJump = false;
-        for (Entity i : room.entityList) {
-            if (i instanceof Platform) {
-                //Checks if Platform is directly below. If so, player can jump. Stays true once it becomes
-                if (!canJump) {
-                    canJump = i.getBounds().intersects(new Rectangle(x, y + 1, w, h));
-                }
-                if (canJump && upState) {
-                    vSpd = jumpHeight * -1; //Sends player upward (Jump)
-                    upState = false;
-
-                }
-                /* Checks if player will collide with a platform in the next step. If so, it
-                 * will move the player as close to the platform as possible without intersecting it.
-                 * Then, it sets vSpd/hSpd to 0, so it will not move in the direction. */
-                if (i.getBounds().intersects(new Rectangle(x + (int) hSpd, y, w, h))) {
-                    while (!i.getBounds().intersects(new Rectangle(x + (int) sign(hSpd), y, w, h))) {
-                        x += sign((int) hSpd);
-                    }
-                    hSpd = 0;
-                }
-                if (i.getBounds().intersects(new Rectangle(x, y + (int) vSpd, w, h))) {
-                    while (!i.getBounds().intersects(new Rectangle(x, y + (int) sign(vSpd), w, h))) {
-                        y += sign((int) vSpd);
-                    }
-                    vSpd = 0;
-                }
-                //Tests if player is inside a platform, and pushes player horizontally out of the shortest side
-                if (i.getBounds().intersects(new Rectangle(x, y, w, h))) {
-                    int distRight = Math.abs((int) (i.getBounds().getX() - (x + w)));
-                    int distLeft = Math.abs((int) (x - (i.getBounds().getX() + i.getBounds().getWidth())));
-                    if (distRight < distLeft) {
-                        x = (int) (i.getBounds().getX() - w);
-                    } else
-                        x = (int) (i.getBounds().getX() + i.getBounds().getWidth());
-                }
-            }
-        }
-        this.x += hSpd;
-        this.y += vSpd;
-    }
-
-    private double sign(double num) {
-        if (num != 0)
-            return (num / Math.abs(num));
-        return (0);
-    }
-
-    public double direction(boolean leftState, boolean rightState) {
-        int dir = 0;
-        if (leftState) {
-            dir += -1;
-        } else if (rightState) {
-            dir += 1;
-        }
-        return sideMovement(dir);
-    }
-
+        this.HB.step();
+        if (this.healthPoints <= 0) {
+            this.remove();
+        }
+    }
     public double sideMovement(int dir) {
         if (Math.abs(hSpd) < walkSpeed) {
             hSpd += hAcc * dir;
         }
         return hSpd;
     }
-
     public void paint(Graphics2D g) {
         g.setColor(new Color(74, 204, 111, 100));
         if (canJump)
@@ -153,6 +58,8 @@
         g.fillRect(x - room.getCamX(), y, w, h);
     }
 
+    //---Getters and Setters---
+
     //Returns the enemy's hit box
     public Rectangle getBounds() {
         return new Rectangle(x, y, w, h);
@@ -167,6 +74,10 @@
     public int getY() {
         return y;
     }
+    //Sets the room
+    public void setRoom(Room room) {
+        this.room = room;
+    }
 
     //Returns All Image Sources in Order
     public String[] getImgSources() {
@@ -193,4 +104,5 @@
     int getTotalHealth(){
         return this.maxHealth;
     }
+    void setHealth(int damage) { this.healthPoints -= damage;}
 }
\ No newline at end of file
Index: src/Platformer/Bot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\n\r\nimport sun.awt.windows.WPrinterJob;\r\n\r\nimport java.awt.*;\r\n\r\npublic class Bot extends Enemy {\r\n    private HealthBars HB;\r\n    public Bot(int x, int y, int w, int h) {\r\n        super(x, y, w, h);\r\n        setStats(100, 20, 30);\r\n\r\n    }\r\n\r\n    public void step() {\r\n        this.HB.step();\r\n        super.step();\r\n        if (this.healthPoints >0) {\r\n            this.healthPoints--;\r\n        }\r\n    }\r\n\r\n    public boolean facingRight() {\r\n        return true;\r\n    }\r\n\r\n    public void paint(Graphics2D g) {\r\n        HB.paint(g);\r\n    }\r\n\r\n    public Rectangle getBounds() {\r\n        return new Rectangle(x, y, w, h);\r\n    }\r\n\r\n    public void setRoom(Room room) {\r\n        this.room = room;\r\n    }\r\n\r\n    void remove() {\r\n    this.HB.step();\r\n        System.out.println(\"spawning health bar.\");\r\n    }\r\n\r\n    void spawn() {\r\n      room.hurtboxList.add(new Hurtbox(x, y, w+10, h+10, 10, this));\r\n      this.HB = new HealthBars(this);\r\n    }\r\n\r\n    public String[] getImgSources() {\r\n        return new String[]{\"src/Platformer/Images/stockImage.png\"};\r\n    }\r\n\r\n    public void setImgIndex(int[] i) {\r\n        imgIndex = i;\r\n    }\r\n\r\n    public int getImgIndex() {\r\n        return imgIndex[0];\r\n    }\r\n\r\n    public void setStats(int totHealth, int theWalkSpeed, int theJumpHeight) {\r\n        this.maxHealth = totHealth;\r\n        this.healthPoints = totHealth;\r\n        this.walkSpeed = theWalkSpeed;\r\n        this.jumpHeight = theJumpHeight;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Bot.java	(revision 58594db6d4e178f7f6c332532e1343a0816cdd19)
+++ src/Platformer/Bot.java	(date 1588650823120)
@@ -6,7 +6,6 @@
 import java.awt.*;
 
 public class Bot extends Enemy {
-    private HealthBars HB;
     public Bot(int x, int y, int w, int h) {
         super(x, y, w, h);
         setStats(100, 20, 30);
@@ -14,13 +13,113 @@
     }
 
     public void step() {
-        this.HB.step();
         super.step();
-        if (this.healthPoints >0) {
+        if (this.healthPoints > 0) {
             this.healthPoints--;
         }
-    }
+        int playerX = 0;
+        int playerY = 0;
+        for(int player : Room.playerList()){
+            if(Math.abs(Room.playerList(player).getX()-this.getX()) < PlayerX || playerX == 0){
+                playerX = Room.playerList(player).getX();
+            }
+        }
+
+            // doesn't matter
+            upState = false;
+            int vrand = (int) (Math.random() * 250);// 0-2
+            int hrand = (int) (Math.random() * 500);//0-999
+
+            //horizontal decisions
+            if (leftState) {
+                if (hrand == 0) {
+                    leftState = false;
+                    rightState = false;
+                } else if (hrand == 1) {
+                    leftState = false;
+                    rightState = true;
+                }
+            } else if (rightState) {
 
+                if (hrand == 0) {
+                    rightState = false;
+                } else if (hrand == 1) {
+                    leftState = true;
+                    rightState = false;
+                }
+            } else {
+                if (hrand == 0) {
+                    leftState = true;
+                    rightState = false;
+                } else if (hrand == 1) {
+                    rightState = true;
+                }
+            }
+            //vertical decisions
+            if (vrand == 0) {
+                upState = true;
+            }
+            direction(leftState, rightState);
+            vSpd += grv;
+            canJump = false;
+            // Basically checks boundaries.
+            for (Entity i : room.entityList) {
+                if (i instanceof Platform) {
+                    //Checks if Platform is directly below. If so, player can jump. Stays true once it becomes
+                    if (!canJump) {
+                        canJump = i.getBounds().intersects(new Rectangle(x, y + 1, w, h));
+                    }
+                    if (canJump && upState) {
+                        vSpd = jumpHeight * -1; //Sends player upward (Jump)
+                        upState = false;
+
+                    }
+                    /* Checks if player will collide with a platform in the next step. If so, it
+                     * will move the player as close to the platform as possible without intersecting it.
+                     * Then, it sets vSpd/hSpd to 0, so it will not move in the direction. */
+                    if (i.getBounds().intersects(new Rectangle(x + (int) hSpd, y, w, h))) {
+                        while (!i.getBounds().intersects(new Rectangle(x + (int) sign(hSpd), y, w, h))) {
+                            x += sign((int) hSpd);
+                        }
+                        hSpd = 0;
+                    }
+                    if (i.getBounds().intersects(new Rectangle(x, y + (int) vSpd, w, h))) {
+                        while (!i.getBounds().intersects(new Rectangle(x, y + (int) sign(vSpd), w, h))) {
+                            y += sign((int) vSpd);
+                        }
+                        vSpd = 0;
+                    }
+                    //Tests if player is inside a platform, and pushes player horizontally out of the shortest side
+                    if (i.getBounds().intersects(new Rectangle(x, y, w, h))) {
+                        int distRight = Math.abs((int) (i.getBounds().getX() - (x + w)));
+                        int distLeft = Math.abs((int) (x - (i.getBounds().getX() + i.getBounds().getWidth())));
+                        if (distRight < distLeft) {
+                            x = (int) (i.getBounds().getX() - w);
+                        } else
+                            x = (int) (i.getBounds().getX() + i.getBounds().getWidth());
+                    }
+                }
+            }
+            this.x += hSpd;
+            this.y += vSpd;
+
+    }
+
+    private double sign(double num) {
+        if (num != 0)
+            return (num / Math.abs(num));
+        return (0);
+    }
+
+    public double direction(boolean leftState, boolean rightState) {
+        int dir = 0;
+        if (leftState) {
+            dir += -1;
+        } else if (rightState) {
+            dir += 1;
+        }
+        return sideMovement(dir);
+    }
     public boolean facingRight() {
         return true;
     }
@@ -38,13 +137,13 @@
     }
 
     void remove() {
-    this.HB.step();
+        this.HB.step();
         System.out.println("spawning health bar.");
     }
 
     void spawn() {
-      room.hurtboxList.add(new Hurtbox(x, y, w+10, h+10, 10, this));
-      this.HB = new HealthBars(this);
+        room.hurtboxList.add(new Hurtbox(x, y, w + 10, h + 10, 10, this));
+        this.HB = new HealthBars(this);
     }
 
     public String[] getImgSources() {
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Compiled class file\r\n*.class\r\n\r\n# Log file\r\n*.log\r\n\r\n# BlueJ files\r\n*.ctxt\r\n\r\n# Mobile Tools for Java (J2ME)\r\n.mtj.tmp/\r\n\r\n# Package Files #\r\n*.jar\r\n*.war\r\n*.nar\r\n*.ear\r\n*.zip\r\n*.tar.gz\r\n*.rar\r\n\r\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\r\nhs_err_pid*\r\n/bin/\n*.xml\n*.xml\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(revision 58594db6d4e178f7f6c332532e1343a0816cdd19)
+++ .gitignore	(date 1588650932973)
@@ -24,3 +24,4 @@
 /bin/
 *.xml
 *.xml
+.idea/shelf/Uncommitted_changes_before_Update_at_5_3_2020_3_14_AM_[Default_Changelist]/shelved.patch
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"92acb7fe-7559-4c30-8e06-a3858bf37b7d\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/Platformer/Room.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Platformer/Room.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1bO22KqXxF39GdKhkRSygYn2Jfa\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Runner\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Platformer.Runner\" />\r\n      <module name=\"Basics\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Platformer.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Runner\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"92acb7fe-7559-4c30-8e06-a3858bf37b7d\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1588488611254</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1588488611254</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"414\" y=\"175\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog\" timestamp=\"1588489577779\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"414\" y=\"175\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489577779\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.center\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.left\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.right\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision 58594db6d4e178f7f6c332532e1343a0816cdd19)
+++ .idea/workspace.xml	(date 1588650437509)
@@ -1,14 +1,45 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="BranchesTreeState">
+    <expand>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+    </expand>
+    <select />
+  </component>
   <component name="ChangeListManager">
-    <list default="true" id="92acb7fe-7559-4c30-8e06-a3858bf37b7d" name="Default Changelist" comment="">
-      <change beforePath="$PROJECT_DIR$/src/Platformer/Room.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Room.java" afterDir="false" />
+    <list default="true" id="92acb7fe-7559-4c30-8e06-a3858bf37b7d" name="Default Changelist" comment="just update HealthBars and colors">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Bot.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Bot.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Enemy.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Enemy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Runner.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Runner.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
   <component name="ProjectId" id="1bO22KqXxF39GdKhkRSygYn2Jfa" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
@@ -17,6 +48,7 @@
   <component name="PropertiesComponent">
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />
   </component>
   <component name="RunManager">
@@ -50,28 +82,116 @@
       <option name="presentableId" value="Default" />
       <updated>1588488611254</updated>
     </task>
+    <task id="LOCAL-00001" summary="Fixed enemy">
+      <created>1588561917438</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1588561917438</updated>
+    </task>
+    <task id="LOCAL-00002" summary="why not">
+      <created>1588561938437</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1588561938437</updated>
+    </task>
+    <task id="LOCAL-00003" summary="small adjustments everywhere for healthbars, and completed not tested HealthBars.">
+      <created>1588566376543</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1588566376543</updated>
+    </task>
+    <task id="LOCAL-00004" summary="added color changing and notes to health bars">
+      <created>1588567526102</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1588567526102</updated>
+    </task>
+    <task id="LOCAL-00005" summary="broken attempt to add healthbars to screen">
+      <created>1588569679273</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1588569679273</updated>
+    </task>
+    <task id="LOCAL-00006" summary="made HealthBars do what theyre supposed to do">
+      <created>1588570240196</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1588570240196</updated>
+    </task>
+    <task id="LOCAL-00007" summary="just update HealthBars and colors">
+      <created>1588572124416</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1588572124416</updated>
+    </task>
+    <option name="localTasksCounter" value="8" />
     <servers />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Fixed enemy" />
+    <MESSAGE value="why not" />
+    <MESSAGE value="small adjustments everywhere for healthbars, and completed not tested HealthBars." />
+    <MESSAGE value="added color changing and notes to health bars" />
+    <MESSAGE value="broken attempt to add healthbars to screen" />
+    <MESSAGE value="made HealthBars do what theyre supposed to do" />
+    <MESSAGE value="just update HealthBars and colors" />
+    <option name="LAST_COMMIT_MESSAGE" value="just update HealthBars and colors" />
   </component>
   <component name="WindowStateProjectService">
     <state x="414" y="175" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1588489577779">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state x="414" y="175" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1588489577779" />
-    <state width="1921" height="282" key="GridCell.Tab.0.bottom" timestamp="1588489664456">
+    <state x="765" y="226" key="#com.intellij.ide.util.MemberChooser" timestamp="1588562422083">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="765" y="226" key="#com.intellij.ide.util.MemberChooser/0.0.1920.1040@0.0.1920.1040" timestamp="1588562422083" />
+    <state width="1877" height="89" key="GridCell.Tab.0.bottom" timestamp="1588650031062">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.center" timestamp="1588489664456">
+    <state width="1877" height="89" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1588650031062" />
+    <state width="1877" height="89" key="GridCell.Tab.0.center" timestamp="1588650031062">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.left" timestamp="1588489664456">
+    <state width="1877" height="89" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1588650031062" />
+    <state width="1877" height="89" key="GridCell.Tab.0.left" timestamp="1588650031062">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.right" timestamp="1588489664456">
+    <state width="1877" height="89" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1588650031062" />
+    <state width="1877" height="89" key="GridCell.Tab.0.right" timestamp="1588650031062">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
+    <state width="1877" height="89" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1588650031062" />
+    <state x="161" y="77" width="1740" height="868" key="MergeDialog" timestamp="1588570941391">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="161" y="77" width="1740" height="868" key="MergeDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1588570941391" />
+    <state x="552" y="253" key="Vcs.Push.Dialog.v2" timestamp="1588572126378">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="552" y="253" key="Vcs.Push.Dialog.v2/0.0.1920.1040@0.0.1920.1040" timestamp="1588572126378" />
+    <state x="769" y="434" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1588648165229">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="769" y="434" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1040@0.0.1920.1040" timestamp="1588648165229" />
   </component>
 </project>
\ No newline at end of file
