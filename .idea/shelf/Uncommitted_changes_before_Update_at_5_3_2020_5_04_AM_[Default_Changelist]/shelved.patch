Index: src/Platformer/Runner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\nimport javax.swing.JFrame;\r\nimport java.util.ArrayList;\r\n\r\npublic class Runner {\r\n    public static void main(String[] args) throws InterruptedException {\r\n        //Creates Window\r\n        JFrame frame = new JFrame(\"Platformer\");\r\n        //Creates list of entities to be placed into room\r\n        ArrayList<Entity> entities = new ArrayList<>();\r\n        //Adds new entities to list (Floor and boundaries are automatically added to room\r\n        entities.add(new Platform(300, 400, 150, 100));\r\n        entities.add(new Assassin(200, 200, 150, 200, 1));\r\n        entities.add(new Bot(500,200,100,250,1));\r\n        //Creates new room, sets width of room and heigth of floor. Also passes list of entities into the room\r\n        Room testingRoom = new Room(entities, 4021, 766);\r\n        //Puts the room onto the screen\r\n        frame.add(testingRoom);\r\n        //Sets attributes to the window (Size, visibility, close operation, resizability)\r\n        frame.setSize(1600, 900);\r\n        frame.setVisible(true);\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.setResizable(false);\r\n        //Core game loop; Steps game and refreshes the look. Then waits 16 ms to achieve 60 fps.\r\n        while (true) {\r\n            testingRoom.step();\r\n            testingRoom.repaint();\r\n            Thread.sleep(16);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Runner.java	(revision 763f4b7b6f43aaa709ad59e06fa49d7431fd533a)
+++ src/Platformer/Runner.java	(date 1588493980209)
@@ -12,7 +12,7 @@
         //Adds new entities to list (Floor and boundaries are automatically added to room
         entities.add(new Platform(300, 400, 150, 100));
         entities.add(new Assassin(200, 200, 150, 200, 1));
-        entities.add(new Bot(500,200,100,250,1));
+        entities.add(new Bot(800,200,100,299,1));
         //Creates new room, sets width of room and heigth of floor. Also passes list of entities into the room
         Room testingRoom = new Room(entities, 4021, 766);
         //Puts the room onto the screen
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"92acb7fe-7559-4c30-8e06-a3858bf37b7d\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/Platformer/Room.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Platformer/Room.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1bO22KqXxF39GdKhkRSygYn2Jfa\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Runner\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Platformer.Runner\" />\r\n      <module name=\"Basics\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Platformer.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Runner\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"92acb7fe-7559-4c30-8e06-a3858bf37b7d\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1588488611254</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1588488611254</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"414\" y=\"175\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog\" timestamp=\"1588489577779\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"414\" y=\"175\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489577779\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.center\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.left\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.right\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision a14bb0e790d42daa0b4ee4685e4426925cb624f2)
+++ .idea/workspace.xml	(date 1588496769588)
@@ -2,13 +2,24 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="92acb7fe-7559-4c30-8e06-a3858bf37b7d" name="Default Changelist" comment="">
-      <change beforePath="$PROJECT_DIR$/src/Platformer/Room.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Room.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Bot.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Bot.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Enemy.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Enemy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Images/backGround_1.png" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Images/backGround_1.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Runner.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Runner.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
   <component name="ProjectId" id="1bO22KqXxF39GdKhkRSygYn2Jfa" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
@@ -18,6 +29,9 @@
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />
+    <property name="project.structure.last.edited" value="Modules" />
+    <property name="project.structure.proportion" value="0.0" />
+    <property name="project.structure.side.proportion" value="0.2" />
   </component>
   <component name="RunManager">
     <configuration name="Runner" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
@@ -53,25 +67,53 @@
     <servers />
   </component>
   <component name="WindowStateProjectService">
-    <state x="414" y="175" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1588489577779">
+    <state x="845" y="383" key="#Notifications" timestamp="1588493681722">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state x="414" y="175" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1588489577779" />
-    <state width="1921" height="282" key="GridCell.Tab.0.bottom" timestamp="1588489664456">
+    <state x="845" y="383" key="#Notifications/0.0.1920.1040@0.0.1920.1040" timestamp="1588493681722" />
+    <state x="414" y="175" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1588492860136">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.center" timestamp="1588489664456">
+    <state x="414" y="175" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1588492860136" />
+    <state x="765" y="226" key="#com.intellij.ide.util.MemberChooser" timestamp="1588496342570">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.left" timestamp="1588489664456">
+    <state x="765" y="226" key="#com.intellij.ide.util.MemberChooser/0.0.1920.1040@0.0.1920.1040" timestamp="1588496342570" />
+    <state x="743" y="357" key="#com.intellij.refactoring.move.moveInstanceMethod.MoveInstanceMethodDialog" timestamp="1588493254011">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.right" timestamp="1588489664456">
+    <state x="743" y="357" key="#com.intellij.refactoring.move.moveInstanceMethod.MoveInstanceMethodDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1588493254011" />
+    <state x="268" y="169" width="440" height="577" key="FileChooserDialogImpl" timestamp="1588492086320">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
+    <state x="268" y="169" width="440" height="577" key="FileChooserDialogImpl/0.0.1920.1040@0.0.1920.1040" timestamp="1588492086320" />
+    <state width="1921" height="91" key="GridCell.Tab.0.bottom" timestamp="1588494107225">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state width="1921" height="91" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1588494107225" />
+    <state width="1921" height="91" key="GridCell.Tab.0.center" timestamp="1588494107225">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state width="1921" height="91" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1588494107225" />
+    <state width="1921" height="91" key="GridCell.Tab.0.left" timestamp="1588494107225">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state width="1921" height="91" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1588494107225" />
+    <state width="1921" height="91" key="GridCell.Tab.0.right" timestamp="1588494107225">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state width="1921" height="91" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1588494107225" />
+    <state x="184" y="86" key="MergeDialog" timestamp="1588493663485">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="184" y="86" key="MergeDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1588493663485" />
+    <state x="440" y="94" key="SettingsEditor" timestamp="1588494039566">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="440" y="94" key="SettingsEditor/0.0.1920.1040@0.0.1920.1040" timestamp="1588494039566" />
+    <state x="769" y="434" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1588496228439">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="769" y="434" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1040@0.0.1920.1040" timestamp="1588496228439" />
   </component>
 </project>
\ No newline at end of file
Index: src/Platformer/Enemy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\nimport sun.font.TrueTypeFont;\r\n\r\nimport java.awt.*;\r\nimport java.awt.event.KeyEvent;\r\nimport java.util.Random;\r\n\r\npublic abstract class Enemy implements Entity {\r\n    public Enemy(int x, int y, int w, int h){\r\n        walkSpeed = 13;\r\n        healthPoints = 100;\r\n        manaPoints = 100;\r\n        hSpd = 0;\r\n        vSpd = 0;\r\n        jumpHeight = 0;\r\n        maxHealth = 100;\r\n        maxMana = 100;\r\n        grv = 1.5;\r\n        hAcc = 2;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n        setStats(10, 100, 20, 33);//Health Points, Mana Points, Walk Speed, Jump Height\r\n\r\n    }\r\n    public void setRoom(Room room) {\r\n        this.room = room;\r\n    }\r\n\r\n    abstract void remove();\r\n\r\n    abstract void spawn();\r\n\r\n    void setHealth(int damage) {\r\n\r\n    }\r\n    int getMana() {\r\n        return this.manaPoints;\r\n    }\r\n\r\n    void setMana(int cost) {\r\n\r\n    }\r\n    public void step() {\r\n    vrand = math.random()*3;// 0-2\r\n    hrand = math.random()*3;//0-2\r\n        if(vrand == 0){\r\n            upState = true;\r\n            downstate = false;\r\n        }\r\n        else if(vrand == 1) {\r\n            upState = false;\r\n            downState = true;\r\n        }\r\n        else { //vrand == 2\r\n            upState = false;\r\n            downState = false;\r\n        }\r\n        if(hrand == 0){\r\n            leftState = true;\r\n            rightState = false;\r\n        }\r\n        else if(hrand == 1){\r\n            leftState = false;\r\n            rightState = true;\r\n        }\r\n        else{\r\n            leftState = false;\r\n            rightState = false;\r\n        }\r\n\r\n\r\n\r\n    }\r\n    public void goplaces(upState,downState,leftState,rightState){\r\n        int dir = 1\r\n        if (leftState = true){\r\n\r\n        }\r\n        else if (rightState = true) {\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n    }\r\n    public void paint(Graphics2D g) {\r\n        g.setColor(new Color(74, 204, 111, 100));\r\n        if (canJump)\r\n            g.setColor(new Color(74, 204, 111));\r\n        g.fillRect(x - room.getCamX(), y, w, h);\r\n    }\r\n    //Returns the enemy's hit box\r\n    public Rectangle getBounds() {\r\n        return new Rectangle(x, y, w, h);\r\n    }\r\n\r\n    //Returns X position\r\n    public int getX() {\r\n        return x;\r\n    }\r\n\r\n    //Returns Y Position\r\n    public int getY() {\r\n        return y;\r\n    }\r\n\r\n    //Returns All Image Sources in Order\r\n    public String[] getImgSources() {\r\n        return new String[]{\"src/Platformer/Images/stockImage.png\"};\r\n    }\r\n\r\n    //Sets the list of indexes to display images\r\n    public void setImgIndex(int[] nums) {\r\n        imgIndex = nums;\r\n    }\r\n\r\n    //Contains logic for which image is to be displayed at a point in time\r\n    public int getImgIndex() {\r\n        return (imgIndex[0]);\r\n    }\r\n\r\n    //Returns whether or not a player can jump\r\n    public boolean canJump() {\r\n        return canJump;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Enemy.java	(revision a14bb0e790d42daa0b4ee4685e4426925cb624f2)
+++ src/Platformer/Enemy.java	(date 1588500232196)
@@ -7,7 +7,13 @@
 import java.util.Random;
 
 public abstract class Enemy implements Entity {
-    public Enemy(int x, int y, int w, int h){
+    protected int x, y, w, h, walkSpeed, healthPoints, manaPoints, maxHealth, maxMana;
+    protected double grv, vSpd, hSpd, jumpHeight, hAcc;
+    protected boolean leftState, rightState, upState, canJump;
+    protected Room room;
+    protected int[] imgIndex;
+
+    public Enemy(int x, int y, int w, int h) {
         walkSpeed = 13;
         healthPoints = 100;
         manaPoints = 100;
@@ -22,9 +28,12 @@
         this.y = y;
         this.w = w;
         this.h = h;
-        setStats(10, 100, 20, 33);//Health Points, Mana Points, Walk Speed, Jump Height
-
+        boolean leftState = false;
+        boolean rightState = false;
+        boolean canJump = false;
+        boolean upState = false;
     }
+
     public void setRoom(Room room) {
         this.room = room;
     }
@@ -36,6 +45,7 @@
     void setHealth(int damage) {
 
     }
+
     int getMana() {
         return this.manaPoints;
     }
@@ -43,55 +53,112 @@
     void setMana(int cost) {
 
     }
+
     public void step() {
-    vrand = math.random()*3;// 0-2
-    hrand = math.random()*3;//0-2
-        if(vrand == 0){
-            upState = true;
-            downstate = false;
-        }
-        else if(vrand == 1) {
-            upState = false;
-            downState = true;
-        }
-        else { //vrand == 2
-            upState = false;
-            downState = false;
-        }
-        if(hrand == 0){
-            leftState = true;
-            rightState = false;
-        }
-        else if(hrand == 1){
-            leftState = false;
-            rightState = true;
-        }
-        else{
-            leftState = false;
-            rightState = false;
+        upState = false;
+        int vrand = (int) (Math.random() * 1000);// 0-2
+        int hrand = (int) (Math.random() * 1000);//0-999
+        //horizontal decisions
+        if (leftState) {
+            if (hrand == 0) {
+                leftState = false;
+                rightState = false;
+            } else if (hrand == 1) {
+                leftState = false;
+                rightState = true;
+            }
+        } else if (rightState) {
+
+            if (hrand == 0) {
+                leftState = false;
+                rightState = false;
+            } else if (hrand == 1) {
+                leftState = true;
+                rightState = false;
+            }
+        } else {
+            if (hrand == 0) {
+                leftState = true;
+                rightState = false;
+            } else if (hrand == 1) {
+                leftState = false;
+                rightState = true;
+            }
         }
+        //vertical decisions
+        if (vrand == 0) {
+            upState = true;
+        }
+        direction(leftState, rightState);
 
-
-
-    }
-    public void goplaces(upState,downState,leftState,rightState){
-        int dir = 1
-        if (leftState = true){
-
+        for (Entity i : room.entityList) {
+            if (i instanceof Platform) {
+                //Checks if Platform is directly below. If so, player can jump. Stays true once it becomes
+                if (!canJump) {
+                    canJump = i.getBounds().intersects(new Rectangle(x, y + 1, w, h));
+                }
+                if (canJump && upState) {
+                    vSpd = jumpHeight * -1; //Sends player upward (Jump)
+                }
+                /* Checks if player will collide with a platform in the next step. If so, it
+                 * will move the player as close to the platform as possible without intersecting it.
+                 * Then, it sets vSpd/hSpd to 0, so it will not move in the direction. */
+                if (i.getBounds().intersects(new Rectangle(x + (int) hSpd, y, w, h))) {
+                    while (!i.getBounds().intersects(new Rectangle(x + (int) sign(hSpd), y, w, h))) {
+                        x += sign((int) hSpd);
+                    }
+                    hSpd = 0;
+                }
+                if (i.getBounds().intersects(new Rectangle(x, y + (int) vSpd, w, h))) {
+                    while (!i.getBounds().intersects(new Rectangle(x, y + (int) sign(vSpd), w, h))) {
+                        y += sign((int) vSpd);
+                    }
+                    vSpd = 0;
+                }
+                //Tests if player is inside a platform, and pushes player horizontally out of the shortest side
+                if (i.getBounds().intersects(new Rectangle(x, y, w, h))) {
+                    int distRight = Math.abs((int) (i.getBounds().getX() - (x + w)));
+                    int distLeft = Math.abs((int) (x - (i.getBounds().getX() + i.getBounds().getWidth())));
+                    if (distRight < distLeft) {
+                        x = (int) (i.getBounds().getX() - w);
+                    } else
+                        x = (int) (i.getBounds().getX() + i.getBounds().getWidth());
+                }
+            }
         }
-        else if (rightState = true) {
+        this.x += hSpd;
+        this.y += vSpd;
+    }
 
-        }
-        else{
+    private double sign(double num) {
+        if (num != 0)
+            return (num / Math.abs(num));
+        return (0);
+    }
 
+    public double direction(boolean leftState, boolean rightState) {
+        int dir = 0;
+        if (leftState) {
+            dir += -1;
+        } else if (rightState) {
+            dir += 1;
         }
+        return (double) sideMovement(dir);
     }
+
+    public double sideMovement(int dir) {
+
+        hSpd += hAcc * dir;
+        return hSpd;
+    }
+
     public void paint(Graphics2D g) {
         g.setColor(new Color(74, 204, 111, 100));
         if (canJump)
             g.setColor(new Color(74, 204, 111));
         g.fillRect(x - room.getCamX(), y, w, h);
     }
+
     //Returns the enemy's hit box
     public Rectangle getBounds() {
         return new Rectangle(x, y, w, h);
Index: src/Platformer/Bot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\n\r\nimport java.awt.*;\r\n\r\npublic class Bot extends Enemy {\r\n    public Bot(){\r\n\r\n    }\r\n\r\n    @Override\r\n    public void step() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean facingRight() {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public void paint(Graphics2D g) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public Rectangle getBounds() {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void setRoom(Room room) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public String[] getImgSources() {\r\n        return new String[0];\r\n    }\r\n\r\n    @Override\r\n    public void setImgIndex(int[] i) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getImgIndex() {\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int getX() {\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int getY() {\r\n        return 0;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Bot.java	(revision a14bb0e790d42daa0b4ee4685e4426925cb624f2)
+++ src/Platformer/Bot.java	(date 1588500232202)
@@ -6,6 +6,7 @@
 public class Bot extends Enemy {
     public Bot(){
 
+
     }
 
     @Override
@@ -33,6 +34,16 @@
 
     }
 
+    @Override
+    void remove() {
+
+    }
+
+    @Override
+    void spawn() {
+
+    }
+
     @Override
     public String[] getImgSources() {
         return new String[0];
@@ -56,5 +67,8 @@
     @Override
     public int getY() {
         return 0;
+    }
+    public void setStats(int healthPoints, int manaPoints, int walkSpeed, int jumpHeight){
+
     }
 }
