Index: src/Platformer/Runner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\nimport javax.swing.JFrame;\r\nimport java.util.ArrayList;\r\n\r\npublic class Runner {\r\n    public static void main(String[] args) throws InterruptedException {\r\n        //Creates Window\r\n        JFrame frame = new JFrame(\"Platformer\");\r\n        //Creates list of entities to be placed into room\r\n        ArrayList<Entity> entities = new ArrayList<>();\r\n        //Adds new entities to list (Floor and boundaries are automatically added to room\r\n        entities.add(new Background(4021, 766, \"src/Platformer/Images/backGround_1.png\"));\r\n        entities.add(new Platform(300, 400, 150, 100));\r\n        entities.add(new Assassin(200, 200, 150, 200, 1));\r\n        entities.add(new Bot(800,200,100,299));\r\n        //Creates new room, sets width of room and heigth of floor. Also passes list of entities into the room\r\n        Room testingRoom = new Room(entities, 4021, 766);\r\n        //Puts the room onto the screen\r\n        frame.add(testingRoom);\r\n        //Sets attributes to the window (Size, visibility, close operation, resizability)\r\n        frame.setSize(1600, 900);\r\n        frame.setVisible(true);\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.setResizable(false);\r\n        //Core game loop; Steps game and refreshes the look. Then waits 16 ms to achieve 60 fps.\r\n        while (true) {\r\n            testingRoom.step();\r\n            testingRoom.repaint();\r\n            Thread.sleep(16);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Runner.java	(revision f094a5e34799361e934bd3b16d925843730a6a7e)
+++ src/Platformer/Runner.java	(date 1588569807109)
@@ -12,8 +12,8 @@
         //Adds new entities to list (Floor and boundaries are automatically added to room
         entities.add(new Background(4021, 766, "src/Platformer/Images/backGround_1.png"));
         entities.add(new Platform(300, 400, 150, 100));
-        entities.add(new Assassin(200, 200, 150, 200, 1));
         entities.add(new Bot(800,200,100,299));
+        entities.add(new Assassin(200, 200, 150, 200, 1));
         //Creates new room, sets width of room and heigth of floor. Also passes list of entities into the room
         Room testingRoom = new Room(entities, 4021, 766);
         //Puts the room onto the screen
Index: src/Platformer/Assassin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\n\r\npublic class Assassin extends Player {\r\n    private int maxHealth;\r\n    private int maxMana;\r\n    private int healthPoints;\r\n    private int manaPoints;\r\n    private final int weaponIndex;\r\n    private int mvTimer;\r\n    private HealthBars HB;\r\n\r\n    public Assassin(int x, int y, int w, int h, int i) {\r\n        super(x, y, w, h, i);\r\n        this.weaponIndex = i;\r\n        maxHealth = 0;\r\n        maxMana = 0;\r\n        healthPoints = 0;\r\n        manaPoints = 0;\r\n        setStats(100, 100, 20, 33);//Health Points, Mana Points, Walk Speed, Jump Height\r\n        HealthBars HB = new HealthBars(this);\r\n    }\r\n\r\n    void remove() {\r\n\r\n    }\r\n\r\n    void spawn() {\r\n\r\n    }\r\n\r\n    public String[] getImgSources() {\r\n        //List of all assassin image sources. Index in this list correlates to imgIndex.\r\n        return new String[]{\"src/Platformer/Images/Assassin/assassinNeutral.PNG\",\r\n                \"src/Platformer/Images/Assassin/assassinUp.PNG\", \"src/Platformer/Images/Assassin/assassinDown.png\",\r\n                \"src/Platformer/Images/Assassin/assassinRunning1.PNG\", \"src/Platformer/Images/Assassin/assassinRunning2.PNG\",\r\n                \"src/Platformer/Images/Assassin/assassinRunning3.PNG\", \"src/Platformer/Images/Assassin/assassinRunning4.PNG\",\r\n                \"src/Platformer/Images/Assassin/assassinRunning5.PNG\", \"src/Platformer/Images/Assassin/assassinRunning6.PNG\",\r\n                \"src/Platformer/Images/Assassin/assassinRunning7.PNG\", \"src/Platformer/Images/Assassin/assassinRunning8.PNG\",\r\n                \"src/Platformer/Images/Assassin/assassinSkid.PNG\", \"src/Platformer/Images/Assassin/assassinSkidBack.PNG\",\r\n                \"src/Platformer/Images/Assassin/assassinCrouch.PNG\"};\r\n    }\r\n\r\n    public void setImgIndex(int[] nums) {\r\n        imgIndex = nums;\r\n    }\r\n\r\n    public int getImgIndex() {\r\n        //Checks if player is in the air\r\n        if (vSpd >= 0 && !canJump) {\r\n            return (imgIndex[2]);\r\n        }\r\n        if (vSpd < 0) {\r\n            return (imgIndex[1]);\r\n        }\r\n\r\n        //Checks if player is crouching and resets running animation\r\n        if (downState) {\r\n            mvTimer = 0;\r\n            return imgIndex[13];\r\n        }\r\n        //Checks if player staying still\r\n        if (Math.abs(hSpd) < 1 || mvTimer == 0) {\r\n            return imgIndex[0];\r\n        }\r\n        //Player is on ground moving. Animation of 8 frames running at 12 frames per second\r\n        else {\r\n            //Skidding Animation & Skidding backwards animation. Resets running animation\r\n            if (!leftState && !rightState) {\r\n                mvTimer = 0;\r\n                if ((hSpd > 0 && facingRight) || (hSpd < 0 && !facingRight))\r\n                    return imgIndex[11];\r\n                return imgIndex[12];\r\n            }\r\n            //Iterates through the running animation\r\n            int mvMod = mvTimer % 40;\r\n            if (mvMod == 0)\r\n                return imgIndex[10];\r\n            if (mvMod <= 5)\r\n                return imgIndex[3];\r\n            if (mvMod <= 10)\r\n                return imgIndex[4];\r\n            if (mvMod <= 15)\r\n                return imgIndex[5];\r\n            if (mvMod <= 20)\r\n                return imgIndex[6];\r\n            if (mvMod <= 25)\r\n                return imgIndex[7];\r\n            if (mvMod <= 30)\r\n                return imgIndex[8];\r\n            if (mvMod <= 35)\r\n                return imgIndex[9];\r\n            return imgIndex[10];\r\n        }\r\n    }\r\n\r\n    public void step() {\r\n        super.step();                //Calls Player.step()\r\n        if (hSpd != 0 && canJump)    //Checks if player is on the ground running\r\n            mvTimer++;                //Iterates through running frames\r\n        else\r\n            mvTimer = 0;            //Resets animation once player stops\r\n        this.HB.step();\r\n    }\r\n\r\n    public void setStats(int totHealth, int totMana, int theWalkSpeed, int theJumpHeight) {\r\n        this.maxHealth = totHealth;\r\n        this.maxMana = totMana;\r\n        this.healthPoints = totHealth;\r\n        this.manaPoints = totMana;\r\n        this.walkSpeed = theWalkSpeed;\r\n        this.jumpHeight = theJumpHeight;\r\n    }\r\n\r\n    int getWeaponIndex() {\r\n        return this.weaponIndex;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Assassin.java	(revision f094a5e34799361e934bd3b16d925843730a6a7e)
+++ src/Platformer/Assassin.java	(date 1588570083845)
@@ -18,7 +18,6 @@
         healthPoints = 0;
         manaPoints = 0;
         setStats(100, 100, 20, 33);//Health Points, Mana Points, Walk Speed, Jump Height
-        HealthBars HB = new HealthBars(this);
     }
 
     void remove() {
@@ -26,7 +25,7 @@
     }
 
     void spawn() {
-
+        HealthBars HB = new HealthBars(this);
     }
 
     public String[] getImgSources() {
Index: src/Platformer/HealthBars.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\nimport java.awt.*;\r\n\r\npublic class HealthBars implements Entity {\r\n    private int x;          // x loc of health bar.\r\n    private int y;          // y loc of health bar.\r\n    private int width;      // width of health bar.\r\n    private int height;     // height of health bar.\r\n    private double hp;      // pixels per health point\r\n    private int curHealth;  // actual health (in pixels)\r\n    private int color;\r\n    private int red;\r\n    private Room room;\r\n    Entity e;\r\n\r\n    public HealthBars(Entity en) {\r\n        this.e = en;\r\n\r\n        if (en instanceof Enemy) {\r\n            this.room = ((Enemy)en).room;\r\n            this.height = 20;\r\n            this.width = 80;\r\n        } else if (en instanceof Assassin) {\r\n            this.room = ((Player)en).room;\r\n            this.y = 20;\r\n            this.width = 400;\r\n            this.height = 100;\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void step() {\r\n        if (this.e instanceof Player) { //width/totalHealth = pixels per hp\r\n            this.x = room.getCamX() + 20;\r\n            this.hp = this.width / ((Player) this.e).getTotalHealth();//supposed to get health from the two classes and find pixels per hp.\r\n            this.curHealth = (int) this.hp * ((Player) this.e).getHealth();  //shows how much health the player actually has\r\n            this.color = (((Player)this.e).getHealth()/((Player)this.e).getTotalHealth())*255;\r\n            if (this.color < 150){\r\n                this.red = (((Player)this.e).getTotalHealth()/((Player)this.e).getHealth())*10;\r\n            }\r\n            else{\r\n                this.red = 0;\r\n            }\r\n        } else if (this.e instanceof Enemy) {\r\n            this.x = this.e.getX();\r\n            this.y = this.e.getY() - 100;\r\n            this.hp = this.width / ((Enemy) e).getTotalHealth();//supposed to get health from the two classes and find pixels per hp.\r\n            this.curHealth = (int) this.hp * ((Enemy) this.e).getHealth();   //shows how much health the enemy actually has\r\n            this.color = (((Enemy)this.e).getHealth()/((Enemy)this.e).getTotalHealth())*255; //used to calculate amount of green in health bar. then it is the amount of red.\r\n            if (this.color < 150){\r\n                this.red = (((Enemy)this.e).getTotalHealth()/((Enemy)this.e).getHealth())*10;\r\n            }\r\n            else{\r\n                this.red = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean facingRight() {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public void paint(Graphics2D g) {\r\n        g.setColor(new Color(this.red, this.color, 0));\r\n        g.fillRect(this.x, this.y, this.curHealth, this.height);    // draws the health part of the health bar.\r\n        g.setColor(Color.BLACK);\r\n        g.drawRect(this.x, this.y, this.width, this.height);        // draws the outline of the health bar.\r\n    }\r\n\r\n    @Override\r\n    public Rectangle getBounds() {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void setRoom(Room room) {\r\n        this.room = room;\r\n    }\r\n\r\n    @Override\r\n    public String[] getImgSources() {\r\n        return new String[0];\r\n    }\r\n\r\n    @Override\r\n    public void setImgIndex(int[] i) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getImgIndex() {\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int getX() {\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int getY() {\r\n        return 0;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/HealthBars.java	(revision f094a5e34799361e934bd3b16d925843730a6a7e)
+++ src/Platformer/HealthBars.java	(date 1588570706025)
@@ -23,6 +23,7 @@
             this.width = 80;
         } else if (en instanceof Assassin) {
             this.room = ((Player)en).room;
+            this.x = room.getCamX() + 20;
             this.y = 20;
             this.width = 400;
             this.height = 100;
@@ -33,7 +34,6 @@
     @Override
     public void step() {
         if (this.e instanceof Player) { //width/totalHealth = pixels per hp
-            this.x = room.getCamX() + 20;
             this.hp = this.width / ((Player) this.e).getTotalHealth();//supposed to get health from the two classes and find pixels per hp.
             this.curHealth = (int) this.hp * ((Player) this.e).getHealth();  //shows how much health the player actually has
             this.color = (((Player)this.e).getHealth()/((Player)this.e).getTotalHealth())*255;
@@ -46,7 +46,7 @@
         } else if (this.e instanceof Enemy) {
             this.x = this.e.getX();
             this.y = this.e.getY() - 100;
-            this.hp = this.width / ((Enemy) e).getTotalHealth();//supposed to get health from the two classes and find pixels per hp.
+            this.hp = this.width / ((Enemy) this.e).getTotalHealth();//supposed to get health from the two classes and find pixels per hp.
             this.curHealth = (int) this.hp * ((Enemy) this.e).getHealth();   //shows how much health the enemy actually has
             this.color = (((Enemy)this.e).getHealth()/((Enemy)this.e).getTotalHealth())*255; //used to calculate amount of green in health bar. then it is the amount of red.
             if (this.color < 150){
Index: src/Platformer/Bot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\n\r\nimport sun.awt.windows.WPrinterJob;\r\n\r\nimport java.awt.*;\r\n\r\npublic class Bot extends Enemy {\r\n    private HealthBars HB;\r\n    public Bot(int x, int y, int w, int h) {\r\n        super(x, y, w, h);\r\n        setStats(100, 20, 30);\r\n        HealthBars HB = new HealthBars(this);\r\n    }\r\n\r\n    public void step() {\r\n        this.HB.step();\r\n        super.step();\r\n    }\r\n\r\n    public boolean facingRight() {\r\n        return true;\r\n    }\r\n\r\n    public void paint(Graphics2D g) {\r\n\r\n    }\r\n\r\n    public Rectangle getBounds() {\r\n        return new Rectangle(x, y, w, h);\r\n    }\r\n\r\n    public void setRoom(Room room) {\r\n        this.room = room;\r\n    }\r\n\r\n    void remove() {\r\n    this.HB.step();\r\n        System.out.println(\"spawning health bar.\");\r\n    }\r\n\r\n    void spawn() {\r\n      room.hurtboxList.add(new Hurtbox(x, y, w+10, h+10, 10, this));\r\n    }\r\n\r\n    public String[] getImgSources() {\r\n        return new String[]{\"src/Platformer/Images/stockImage.png\"};\r\n    }\r\n\r\n    public void setImgIndex(int[] i) {\r\n        imgIndex = i;\r\n    }\r\n\r\n    public int getImgIndex() {\r\n        return imgIndex[0];\r\n    }\r\n\r\n    public void setStats(int totHealth, int theWalkSpeed, int theJumpHeight) {\r\n        this.maxHealth = totHealth;\r\n        this.healthPoints = totHealth;\r\n        this.walkSpeed = theWalkSpeed;\r\n        this.jumpHeight = theJumpHeight;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Bot.java	(revision f094a5e34799361e934bd3b16d925843730a6a7e)
+++ src/Platformer/Bot.java	(date 1588570083852)
@@ -10,7 +10,6 @@
     public Bot(int x, int y, int w, int h) {
         super(x, y, w, h);
         setStats(100, 20, 30);
-        HealthBars HB = new HealthBars(this);
     }
 
     public void step() {
@@ -41,6 +40,7 @@
 
     void spawn() {
       room.hurtboxList.add(new Hurtbox(x, y, w+10, h+10, 10, this));
+        HealthBars HB = new HealthBars(this);
     }
 
     public String[] getImgSources() {
Index: .idea/dictionaries/jrich.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dictionaries/jrich.xml	(date 1588568967530)
+++ .idea/dictionaries/jrich.xml	(date 1588568967530)
@@ -0,0 +1,7 @@
+<component name="ProjectDictionaryState">
+  <dictionary name="jrich">
+    <words>
+      <w>mana</w>
+    </words>
+  </dictionary>
+</component>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"92acb7fe-7559-4c30-8e06-a3858bf37b7d\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/Platformer/Room.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Platformer/Room.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1bO22KqXxF39GdKhkRSygYn2Jfa\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Runner\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Platformer.Runner\" />\r\n      <module name=\"Basics\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Platformer.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Runner\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"92acb7fe-7559-4c30-8e06-a3858bf37b7d\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1588488611254</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1588488611254</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"414\" y=\"175\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog\" timestamp=\"1588489577779\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"414\" y=\"175\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489577779\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.center\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.left\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.right\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision f094a5e34799361e934bd3b16d925843730a6a7e)
+++ .idea/workspace.xml	(date 1588570607401)
@@ -1,14 +1,46 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="BranchesTreeState">
+    <expand>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+    </expand>
+    <select />
+  </component>
   <component name="ChangeListManager">
-    <list default="true" id="92acb7fe-7559-4c30-8e06-a3858bf37b7d" name="Default Changelist" comment="">
-      <change beforePath="$PROJECT_DIR$/src/Platformer/Room.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Room.java" afterDir="false" />
+    <list default="true" id="92acb7fe-7559-4c30-8e06-a3858bf37b7d" name="Default Changelist" comment="made HealthBars do what theyre supposed to do">
+      <change afterPath="$PROJECT_DIR$/.idea/dictionaries/jrich.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Assassin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Assassin.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Bot.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Bot.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Runner.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Runner.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
   <component name="ProjectId" id="1bO22KqXxF39GdKhkRSygYn2Jfa" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
@@ -17,6 +49,7 @@
   <component name="PropertiesComponent">
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />
   </component>
   <component name="RunManager">
@@ -50,28 +83,107 @@
       <option name="presentableId" value="Default" />
       <updated>1588488611254</updated>
     </task>
+    <task id="LOCAL-00001" summary="Fixed enemy">
+      <created>1588561917438</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1588561917438</updated>
+    </task>
+    <task id="LOCAL-00002" summary="why not">
+      <created>1588561938437</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1588561938437</updated>
+    </task>
+    <task id="LOCAL-00003" summary="small adjustments everywhere for healthbars, and completed not tested HealthBars.">
+      <created>1588566376543</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1588566376543</updated>
+    </task>
+    <task id="LOCAL-00004" summary="added color changing and notes to health bars">
+      <created>1588567526102</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1588567526102</updated>
+    </task>
+    <task id="LOCAL-00005" summary="broken attempt to add healthbars to screen">
+      <created>1588569679273</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1588569679273</updated>
+    </task>
+    <task id="LOCAL-00006" summary="made HealthBars do what theyre supposed to do">
+      <created>1588570240196</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1588570240196</updated>
+    </task>
+    <option name="localTasksCounter" value="7" />
     <servers />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Fixed enemy" />
+    <MESSAGE value="why not" />
+    <MESSAGE value="small adjustments everywhere for healthbars, and completed not tested HealthBars." />
+    <MESSAGE value="added color changing and notes to health bars" />
+    <MESSAGE value="broken attempt to add healthbars to screen" />
+    <MESSAGE value="made HealthBars do what theyre supposed to do" />
+    <option name="LAST_COMMIT_MESSAGE" value="made HealthBars do what theyre supposed to do" />
+  </component>
   <component name="WindowStateProjectService">
     <state x="414" y="175" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1588489577779">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state x="414" y="175" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1588489577779" />
-    <state width="1921" height="282" key="GridCell.Tab.0.bottom" timestamp="1588489664456">
+    <state x="765" y="226" key="#com.intellij.ide.util.MemberChooser" timestamp="1588562422083">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="765" y="226" key="#com.intellij.ide.util.MemberChooser/0.0.1920.1040@0.0.1920.1040" timestamp="1588562422083" />
+    <state width="1877" height="151" key="GridCell.Tab.0.bottom" timestamp="1588570086463">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state width="1877" height="151" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1588570086463" />
+    <state width="1877" height="151" key="GridCell.Tab.0.center" timestamp="1588570086463">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.center" timestamp="1588489664456">
+    <state width="1877" height="151" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1588570086463" />
+    <state width="1877" height="151" key="GridCell.Tab.0.left" timestamp="1588570086463">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.left" timestamp="1588489664456">
+    <state width="1877" height="151" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1588570086463" />
+    <state width="1877" height="151" key="GridCell.Tab.0.right" timestamp="1588570086463">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.right" timestamp="1588489664456">
+    <state width="1877" height="151" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1588570086463" />
+    <state x="161" y="77" width="1740" height="868" key="MergeDialog" timestamp="1588559573891">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
+    <state x="161" y="77" width="1740" height="868" key="MergeDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1588559573891" />
+    <state x="552" y="253" key="Vcs.Push.Dialog.v2" timestamp="1588570244972">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="552" y="253" key="Vcs.Push.Dialog.v2/0.0.1920.1040@0.0.1920.1040" timestamp="1588570244972" />
+    <state x="769" y="434" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1588568964052">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="769" y="434" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1040@0.0.1920.1040" timestamp="1588568964052" />
   </component>
 </project>
\ No newline at end of file
