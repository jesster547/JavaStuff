Index: src/Platformer/Runner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\nimport javax.swing.JFrame;\r\nimport java.util.ArrayList;\r\n\r\npublic class Runner {\r\n    public static void main(String[] args) throws InterruptedException {\r\n        //Creates Window\r\n        JFrame frame = new JFrame(\"Platformer\");\r\n        //Creates list of entities to be placed into room\r\n        ArrayList<Entity> entities = new ArrayList<>();\r\n        //Adds new entities to list (Floor and boundaries are automatically added to room\r\n        entities.add(new Background(4021, 766, \"src/Platformer/Images/backGround_1.png\"));\r\n        entities.add(new Platform(300, 400, 150, 100));\r\n        entities.add(new Assassin(200, 200, 150, 200, 1));\r\n        //entities.add(new Bot(800,200,100,299,1));\r\n        //Creates new room, sets width of room and heigth of floor. Also passes list of entities into the room\r\n        Room testingRoom = new Room(entities, 4021, 766);\r\n        //Puts the room onto the screen\r\n        frame.add(testingRoom);\r\n        //Sets attributes to the window (Size, visibility, close operation, resizability)\r\n        frame.setSize(1600, 900);\r\n        frame.setVisible(true);\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.setResizable(false);\r\n        //Core game loop; Steps game and refreshes the look. Then waits 16 ms to achieve 60 fps.\r\n        while (true) {\r\n            testingRoom.step();\r\n            testingRoom.repaint();\r\n            Thread.sleep(16);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Runner.java	(revision 0429e706718474f2d17074a320cd50e4fa30e4b7)
+++ src/Platformer/Runner.java	(date 1588557847041)
@@ -13,7 +13,7 @@
         entities.add(new Background(4021, 766, "src/Platformer/Images/backGround_1.png"));
         entities.add(new Platform(300, 400, 150, 100));
         entities.add(new Assassin(200, 200, 150, 200, 1));
-        //entities.add(new Bot(800,200,100,299,1));
+        entities.add(new Bot(800,200,100,299));
         //Creates new room, sets width of room and heigth of floor. Also passes list of entities into the room
         Room testingRoom = new Room(entities, 4021, 766);
         //Puts the room onto the screen
Index: src/Platformer/Enemy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\nimport sun.font.TrueTypeFont;\r\n\r\nimport java.awt.*;\r\nimport java.awt.event.KeyEvent;\r\nimport java.util.Random;\r\n\r\npublic abstract class Enemy implements Entity {\r\n    protected int x, y, w, h, walkSpeed, healthPoints, manaPoints, maxHealth, maxMana;\r\n    protected double grv, vSpd, hSpd, jumpHeight, hAcc;\r\n    protected boolean leftState, rightState, upState, canJump;\r\n    protected Room room;\r\n    protected int[] imgIndex;\r\n\r\n    public Enemy(int x, int y, int w, int h) {\r\n        walkSpeed = 13;\r\n        healthPoints = 100;\r\n        manaPoints = 100;\r\n        hSpd = 0;\r\n        vSpd = 0;\r\n        jumpHeight = 0;\r\n        maxHealth = 100;\r\n        maxMana = 100;\r\n        grv = 1.5;\r\n        hAcc = 2;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n        boolean leftState = false;\r\n        boolean rightState = false;\r\n        boolean canJump = false;\r\n        boolean upState = false;\r\n    }\r\n\r\n    public void setRoom(Room room) {\r\n        this.room = room;\r\n    }\r\n\r\n    abstract void remove();\r\n\r\n    abstract void spawn();\r\n\r\n    void setHealth(int damage) {\r\n\r\n    }\r\n\r\n    int getMana() {\r\n        return this.manaPoints;\r\n    }\r\n\r\n    void setMana(int cost) {\r\n\r\n    }\r\n\r\n    public void step() {\r\n        upState = false;\r\n        int vrand = (int) (Math.random() * 1000);// 0-2\r\n        int hrand = (int) (Math.random() * 1000);//0-999\r\n        //horizontal decisions\r\n        if (leftState) {\r\n            if (hrand == 0) {\r\n                leftState = false;\r\n                rightState = false;\r\n            } else if (hrand == 1) {\r\n                leftState = false;\r\n                rightState = true;\r\n            }\r\n        } else if (rightState) {\r\n\r\n            if (hrand == 0) {\r\n                leftState = false;\r\n                rightState = false;\r\n            } else if (hrand == 1) {\r\n                leftState = true;\r\n                rightState = false;\r\n            }\r\n        } else {\r\n            if (hrand == 0) {\r\n                leftState = true;\r\n                rightState = false;\r\n            } else if (hrand == 1) {\r\n                leftState = false;\r\n                rightState = true;\r\n            }\r\n        }\r\n        //vertical decisions\r\n        if (vrand == 0) {\r\n            upState = true;\r\n        }\r\n        direction(leftState, rightState);\r\n\r\n        for (Entity i : room.entityList) {\r\n            if (i instanceof Platform) {\r\n                //Checks if Platform is directly below. If so, player can jump. Stays true once it becomes\r\n                if (!canJump) {\r\n                    canJump = i.getBounds().intersects(new Rectangle(x, y + 1, w, h));\r\n                }\r\n                if (canJump && upState) {\r\n                    vSpd = jumpHeight * -1; //Sends player upward (Jump)\r\n                }\r\n                /* Checks if player will collide with a platform in the next step. If so, it\r\n                 * will move the player as close to the platform as possible without intersecting it.\r\n                 * Then, it sets vSpd/hSpd to 0, so it will not move in the direction. */\r\n                if (i.getBounds().intersects(new Rectangle(x + (int) hSpd, y, w, h))) {\r\n                    while (!i.getBounds().intersects(new Rectangle(x + (int) sign(hSpd), y, w, h))) {\r\n                        x += sign((int) hSpd);\r\n                    }\r\n                    hSpd = 0;\r\n                }\r\n                if (i.getBounds().intersects(new Rectangle(x, y + (int) vSpd, w, h))) {\r\n                    while (!i.getBounds().intersects(new Rectangle(x, y + (int) sign(vSpd), w, h))) {\r\n                        y += sign((int) vSpd);\r\n                    }\r\n                    vSpd = 0;\r\n                }\r\n                //Tests if player is inside a platform, and pushes player horizontally out of the shortest side\r\n                if (i.getBounds().intersects(new Rectangle(x, y, w, h))) {\r\n                    int distRight = Math.abs((int) (i.getBounds().getX() - (x + w)));\r\n                    int distLeft = Math.abs((int) (x - (i.getBounds().getX() + i.getBounds().getWidth())));\r\n                    if (distRight < distLeft) {\r\n                        x = (int) (i.getBounds().getX() - w);\r\n                    } else\r\n                        x = (int) (i.getBounds().getX() + i.getBounds().getWidth());\r\n                }\r\n            }\r\n        }\r\n        this.x += hSpd;\r\n        this.y += vSpd;\r\n    }\r\n\r\n    private double sign(double num) {\r\n        if (num != 0)\r\n            return (num / Math.abs(num));\r\n        return (0);\r\n    }\r\n\r\n    public double direction(boolean leftState, boolean rightState) {\r\n        int dir = 0;\r\n        if (leftState) {\r\n            dir += -1;\r\n        } else if (rightState) {\r\n            dir += 1;\r\n        }\r\n        return (double) sideMovement(dir);\r\n    }\r\n\r\n    public double sideMovement(int dir) {\r\n\r\n        hSpd += hAcc * dir;\r\n        return hSpd;\r\n    }\r\n\r\n    public void paint(Graphics2D g) {\r\n        g.setColor(new Color(74, 204, 111, 100));\r\n        if (canJump)\r\n            g.setColor(new Color(74, 204, 111));\r\n        g.fillRect(x - room.getCamX(), y, w, h);\r\n    }\r\n\r\n    //Returns the enemy's hit box\r\n    public Rectangle getBounds() {\r\n        return new Rectangle(x, y, w, h);\r\n    }\r\n\r\n    //Returns X position\r\n    public int getX() {\r\n        return x;\r\n    }\r\n\r\n    //Returns Y Position\r\n    public int getY() {\r\n        return y;\r\n    }\r\n\r\n    //Returns All Image Sources in Order\r\n    public String[] getImgSources() {\r\n        return new String[]{\"src/Platformer/Images/stockImage.png\"};\r\n    }\r\n\r\n    //Sets the list of indexes to display images\r\n    public void setImgIndex(int[] nums) {\r\n        imgIndex = nums;\r\n    }\r\n\r\n    //Contains logic for which image is to be displayed at a point in time\r\n    public int getImgIndex() {\r\n        return (imgIndex[0]);\r\n    }\r\n\r\n    //Returns whether or not a player can jump\r\n    public boolean canJump() {\r\n        return canJump;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Enemy.java	(revision 0429e706718474f2d17074a320cd50e4fa30e4b7)
+++ src/Platformer/Enemy.java	(date 1588558498240)
@@ -6,22 +6,20 @@
 import java.awt.event.KeyEvent;
 import java.util.Random;
 
-public abstract class Enemy implements Entity {
-    protected int x, y, w, h, walkSpeed, healthPoints, manaPoints, maxHealth, maxMana;
+public abstract class Enemy implements Entity { //Enemy-- does not have mana
+    protected int x, y, w, h, walkSpeed, healthPoints, maxHealth;
     protected double grv, vSpd, hSpd, jumpHeight, hAcc;
-    protected boolean leftState, rightState, upState, canJump;
+    protected boolean leftState, rightState, upState, canJump,facingRight;
     protected Room room;
     protected int[] imgIndex;
 
     public Enemy(int x, int y, int w, int h) {
         walkSpeed = 13;
         healthPoints = 100;
-        manaPoints = 100;
         hSpd = 0;
         vSpd = 0;
         jumpHeight = 0;
         maxHealth = 100;
-        maxMana = 100;
         grv = 1.5;
         hAcc = 2;
         this.x = x;
@@ -32,6 +30,7 @@
         boolean rightState = false;
         boolean canJump = false;
         boolean upState = false;
+        boolean facingRight = false;
     }
 
     public void setRoom(Room room) {
@@ -43,21 +42,12 @@
     abstract void spawn();
 
     void setHealth(int damage) {
-
-    }
-
-    int getMana() {
-        return this.manaPoints;
+        healthPoints -= damage;
     }
-
-    void setMana(int cost) {
-
-    }
-
     public void step() {
         upState = false;
-        int vrand = (int) (Math.random() * 1000);// 0-2
-        int hrand = (int) (Math.random() * 1000);//0-999
+        int vrand = (int) (Math.random() * 500);// 0-2
+        int hrand = (int) (Math.random() * 500);//0-999
         //horizontal decisions
         if (leftState) {
             if (hrand == 0) {
@@ -76,6 +66,8 @@
                 leftState = true;
                 rightState = false;
             }
+            else
+                facingRight = true;
         } else {
             if (hrand == 0) {
                 leftState = true;
@@ -83,6 +75,7 @@
             } else if (hrand == 1) {
                 leftState = false;
                 rightState = true;
+                facingRight = true;
             }
         }
         //vertical decisions
@@ -147,8 +140,9 @@
     }
 
     public double sideMovement(int dir) {
-
-        hSpd += hAcc * dir;
+        if (Math.abs(hSpd) < walkSpeed){
+            hSpd += hAcc * dir;
+        }
         return hSpd;
     }
 
Index: src/Platformer/Bot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Platformer;\r\n\r\n\r\nimport java.awt.*;\r\n\r\npublic class Bot extends Enemy {\r\n    public Bot(){\r\n\r\n    }\r\n\r\n    @Override\r\n    public void step() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean facingRight() {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public void paint(Graphics2D g) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public Rectangle getBounds() {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void setRoom(Room room) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public String[] getImgSources() {\r\n        return new String[0];\r\n    }\r\n\r\n    @Override\r\n    public void setImgIndex(int[] i) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getImgIndex() {\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int getX() {\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int getY() {\r\n        return 0;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Platformer/Bot.java	(revision 0429e706718474f2d17074a320cd50e4fa30e4b7)
+++ src/Platformer/Bot.java	(date 1588558327322)
@@ -1,60 +1,100 @@
 package Platformer;
 
-
 import java.awt.*;
-
 public class Bot extends Enemy {
-    public Bot(){
-
+    private int maxHealth;
+    private int maxMana;
+    private int healthPoints;
+    private int manaPoints;
+    private int mvTimer;
+    public Bot(int x, int y, int w, int h) {
+        super(x, y, w, h);
+        maxHealth = 0;
+        healthPoints = 0;
+        setStats(10, 100, 10, 33);//Health Points, Mana Points, Walk Speed, Jump Height
     }
-
-    @Override
-    public void step() {
+    void remove() {
 
     }
 
-    @Override
-    public boolean facingRight() {
-        return false;
-    }
-
-    @Override
-    public void paint(Graphics2D g) {
+    void spawn() {
 
     }
 
-    @Override
-    public Rectangle getBounds() {
-        return null;
-    }
-
-    @Override
-    public void setRoom(Room room) {
-
-    }
-
-    @Override
     public String[] getImgSources() {
-        return new String[0];
+        //List of all Enemy's image sources. Index in this list correlates to imgIndex.
+        return new String[]{"src/Platformer/Images/Assassin/assassinNeutral.PNG",
+                "src/Platformer/Images/Assassin/assassinUp.PNG", "src/Platformer/Images/Assassin/assassinDown.png",
+                "src/Platformer/Images/Assassin/assassinRunning1.PNG", "src/Platformer/Images/Assassin/assassinRunning2.PNG",
+                "src/Platformer/Images/Assassin/assassinRunning3.PNG", "src/Platformer/Images/Assassin/assassinRunning4.PNG",
+                "src/Platformer/Images/Assassin/assassinRunning5.PNG", "src/Platformer/Images/Assassin/assassinRunning6.PNG",
+                "src/Platformer/Images/Assassin/assassinRunning7.PNG", "src/Platformer/Images/Assassin/assassinRunning8.PNG",
+                "src/Platformer/Images/Assassin/assassinSkid.PNG", "src/Platformer/Images/Assassin/assassinSkidBack.PNG",
+                "src/Platformer/Images/Assassin/assassinCrouch.PNG"};
     }
 
-    @Override
-    public void setImgIndex(int[] i) {
-
+    public void setImgIndex(int[] nums) {
+        imgIndex = nums;
     }
 
-    @Override
     public int getImgIndex() {
-        return 0;
+        //Checks if player is in the air
+        if (vSpd >= 0 && !canJump) {
+            return (imgIndex[2]);
+        }
+        if (vSpd < 0) {
+            return (imgIndex[1]);
+        }
+        //Checks if player staying still
+        if (Math.abs(hSpd) < 1 || mvTimer == 0) {
+            return imgIndex[0];
+        }
+        //Player is on ground moving. Animation of 8 frames running at 12 frames per second
+        else {
+            //Skidding Animation & Skidding backwards animation. Resets running animation
+            if (!leftState && !rightState) {
+                mvTimer=0;
+                if ((hSpd > 0 && facingRight) || (hSpd < 0 && !facingRight))
+                    return imgIndex[11];
+                return imgIndex[12];
+            }
+            //Iterates through the running animation
+            int mvMod = mvTimer % 40;
+            if (mvMod == 0)
+                return imgIndex[10];
+            if (mvMod <= 5)
+                return imgIndex[3];
+            if (mvMod <= 10)
+                return imgIndex[4];
+            if (mvMod <= 15)
+                return imgIndex[5];
+            if (mvMod <= 20)
+                return imgIndex[6];
+            if (mvMod <= 25)
+                return imgIndex[7];
+            if (mvMod <= 30)
+                return imgIndex[8];
+            if (mvMod <= 35)
+                return imgIndex[9];
+            return imgIndex[10];
+        }
     }
 
-    @Override
-    public int getX() {
-        return 0;
+    public void step() {
+        super.step();                //Calls Player.step()
+        if (hSpd != 0 && canJump)    //Checks if player is on the ground running
+            mvTimer++;                //Iterates through running frames
+        else
+            mvTimer = 0;            //Resets animation once player stops
     }
 
     @Override
-    public int getY() {
-        return 0;
+    public boolean facingRight() { return this.facingRight; }
+
+    public void setStats(int totHealth, int totMana, int theWalkSpeed, int theJumpHeight) {
+        this.maxHealth = totHealth;
+        this.healthPoints = totHealth;
+        this.walkSpeed = theWalkSpeed;
+        this.jumpHeight = theJumpHeight;
     }
-}
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"92acb7fe-7559-4c30-8e06-a3858bf37b7d\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/Platformer/Room.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Platformer/Room.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1bO22KqXxF39GdKhkRSygYn2Jfa\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Runner\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Platformer.Runner\" />\r\n      <module name=\"Basics\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Platformer.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Runner\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"92acb7fe-7559-4c30-8e06-a3858bf37b7d\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1588488611254</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1588488611254</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"414\" y=\"175\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog\" timestamp=\"1588489577779\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"414\" y=\"175\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489577779\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.center\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.left\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.right\" timestamp=\"1588489664456\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1921\" height=\"282\" key=\"GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1588489664456\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision 0429e706718474f2d17074a320cd50e4fa30e4b7)
+++ .idea/workspace.xml	(date 1588559249959)
@@ -1,13 +1,38 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="BranchesTreeState">
+    <expand>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+    </expand>
+    <select />
+  </component>
   <component name="ChangeListManager">
     <list default="true" id="92acb7fe-7559-4c30-8e06-a3858bf37b7d" name="Default Changelist" comment="">
-      <change beforePath="$PROJECT_DIR$/src/Platformer/Room.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Room.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/dictionaries/jrich.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Bot.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Bot.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Enemy.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Enemy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Platformer/Runner.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Platformer/Runner.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectId" id="1bO22KqXxF39GdKhkRSygYn2Jfa" />
   <component name="ProjectViewState">
@@ -17,6 +42,7 @@
   <component name="PropertiesComponent">
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />
   </component>
   <component name="RunManager">
@@ -51,27 +77,46 @@
       <updated>1588488611254</updated>
     </task>
     <servers />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
   </component>
   <component name="WindowStateProjectService">
     <state x="414" y="175" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1588489577779">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state x="414" y="175" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1588489577779" />
-    <state width="1921" height="282" key="GridCell.Tab.0.bottom" timestamp="1588489664456">
+    <state x="765" y="226" key="#com.intellij.ide.util.MemberChooser" timestamp="1588557295786">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.center" timestamp="1588489664456">
+    <state x="765" y="226" key="#com.intellij.ide.util.MemberChooser/0.0.1920.1040@0.0.1920.1040" timestamp="1588557295786" />
+    <state width="1877" height="2" key="GridCell.Tab.0.bottom" timestamp="1588558919681">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.left" timestamp="1588489664456">
+    <state width="1877" height="2" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1588558919681" />
+    <state width="1877" height="2" key="GridCell.Tab.0.center" timestamp="1588558919681">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
-    <state width="1921" height="282" key="GridCell.Tab.0.right" timestamp="1588489664456">
+    <state width="1877" height="2" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1588558919681" />
+    <state width="1877" height="2" key="GridCell.Tab.0.left" timestamp="1588558919681">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1921" height="282" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1588489664456" />
+    <state width="1877" height="2" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1588558919681" />
+    <state width="1877" height="2" key="GridCell.Tab.0.right" timestamp="1588558919681">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state width="1877" height="2" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1588558919681" />
+    <state x="769" y="434" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1588500672966">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="769" y="434" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1040@0.0.1920.1040" timestamp="1588500672966" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/dictionaries/jrich.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dictionaries/jrich.xml	(date 1588556698727)
+++ .idea/dictionaries/jrich.xml	(date 1588556698727)
@@ -0,0 +1,7 @@
+<component name="ProjectDictionaryState">
+  <dictionary name="jrich">
+    <words>
+      <w>mana</w>
+    </words>
+  </dictionary>
+</component>
\ No newline at end of file
